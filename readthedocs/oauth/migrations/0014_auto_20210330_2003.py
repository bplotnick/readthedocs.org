# Generated by Django 2.2.19 on 2021-03-30 20:03

from django.db import migrations


# This does an upsert, which might not be the right thing to do in a
# db migration. Instead we might just want to unconditionally create
# it. That way we can have a reversal that removes it.
def upsert_site(apps, schema_editor):
    # It feels a little wrong to use settings in a db migration...
    PRODUCTION_DOMAIN = getattr(settings, 'PRODUCTION_DOMAIN')
    SITE_ID = getattr(settings, 'SITE_ID')
    Site = apps.get_model("sites", "Site")
    Site.objects.update_or_create(id=SITE_ID,
                                  defaults=dict(name=PRODUCTION_DOMAIN,
                                                domain=PRODUCTION_DOMAIN))


class Migration(migrations.Migration):

    dependencies = [
        # Latest migration in OAuth app
        ('oauth', '0013_create_new_table_for_remote_repository_normalization'),

        # `0002_alter_domain_unique` is the highest-numbered migration for
        # the sites framework
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.RunPython(upsert_site),
    ]
